def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 10 // bump for dogfood builds, public betas, etc.

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitBranchName = 'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()
def apkSuffix = versionMajor + '.' + versionMinor + '.' + versionPatch;
def projectName = "TagTree"

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.google.firebase.firebase-crash'

repositories {
    mavenCentral()
    maven {
        url 'https://maven.fabric.io/public'
    }

    maven {
        url "https://s3.amazonaws.com/repo.commonsware.com"
    }
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "in.mobifirst.tagtree"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['debugkeyAlias']
            keyPassword keystoreProperties['debugkeyPassword']
            storeFile file(keystoreProperties['debugstoreFile'])
            storePassword keystoreProperties['debugstorePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("String", "STORAGE_REF", "\"gs://tagtree-4ef29.appspot.com\"")
        }
        debug {
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
            buildConfigField("String", "STORAGE_REF", "\"gs://tagtree-dev.appspot.com\"")
        }
    }
    productFlavors {
        store {
            applicationId "in.mobifirst.tagtree.store"
            versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-${gitBranchName}"
            buildConfigField("String", "TWITTER_KEY", "\"1C1mNkwwXKrpoS1MnBeGBekzA\"")
            buildConfigField("String", "TWITTER_SECRET", "\"0mzEaRQxZOh14SskANmdZgfuW3ae0IUwu9FetUUiQoN7o2VcLR\"")
            buildConfigField("String", "SMS91_SECRET", "\"128441AGQNt0b0eb2q580367e2\"")
        }

        client {
            applicationId "in.mobifirst.tagtree.client"
            versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-${gitBranchName}"
            buildConfigField("String", "TWITTER_KEY", "\"uJ5rp39QWzZUgbPmJFCqRvcRE\"")
            buildConfigField("String", "TWITTER_SECRET", "\"fQ7PjYnsW4ByxDdaBYGmed0DGisnYx10Bs5b7bOtIMtRwFqls3\"")
        }
    }

    // Used to name our output apk
    applicationVariants.all { variant ->
        variant.mergedFlavor.versionName = "${versionMajor}.${versionMinor}.${versionPatch}-${variant.flavorName}-${variant.buildType.name}-${gitBranchName}";
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                output.outputFile = file("$project.buildDir/${projectName}-${variant.name}-${apkSuffix}-${gitSha}.apk")
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.digits.sdk.android:digits:2.0.2@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile "com.google.firebase:firebase-database:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-auth:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-messaging:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-storage:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-crash:$rootProject.firebaseVersion"

    compile "com.google.android.gms:play-services-auth:$rootProject.firebaseVersion"

    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "com.android.support:preference-v7:$rootProject.supportLibraryVersion"

    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"

    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile "com.google.code.findbugs:jsr305:$rootProject.findbugsVersion"



    compile 'com.firebaseui:firebase-ui-database:0.4.0'
    compile 'com.razorpay:checkout:1.0.2'
    compile 'com.commonsware.cwac:presentation:0.4.6'
    compile 'com.android.support:support-v4:25.1.0'
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'